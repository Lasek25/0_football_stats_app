"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

scalar MyDateTime

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find

    matches: [Match] @all
    match(id: ID @eq): Match @find

    competitions: [Competition] @all
    competition(id: ID @eq): Competition @find
    
    matchesQuery(competition: Int, days: Int): [Match]
}

# input DateRange {
#     from: Date!
#     to: Date!
# }

type User {
    id: ID!
    name: String!
    email: String!
    createdAt: DateTime! @rename(attribute: "created_at")
    updatedAt: DateTime! @rename(attribute: "updated_at")
}

type Match {
    id: ID!
    flashscoreId: String! @rename(attribute: "flashscore_id")
    round: Int!
    date: MyDateTime!
    teamsInMatches: [TeamsInMatch!]! @hasMany
}

type TeamsInMatch {
    id: ID!
    goals: Int!
    corners: Int!
    yellowCards: Int! @rename(attribute: "yellow_cards")
    redCards: Int! @rename(attribute: "red_cards")
    fouls: Int!
    offsides: Int!
    shotsOnGoal: Int! @rename(attribute: "shots_on_goal")
    # matchId: Match! @rename(attribute: "match_id") @belongsTo 
    match: Match! @belongsTo
    teamsInCompetition: TeamsInCompetition! @belongsTo
}

type TeamsInCompetition {
    id: ID!
    season: String!
    teamsInMatches: [TeamsInMatch!]! @hasMany
    team: Team! @belongsTo
    competition: Competition! @belongsTo
}

type Team {
    id: ID!
    name: String!
    logoURL: String
    teamsInCompetitions: [TeamsInCompetition!]! @hasMany
}

type Competition {
    id: ID!
    name: String!
    logoURL: String
    teamsInCompetitions: [TeamsInCompetition!]! @hasMany
    competitionsType: CompetitionsType! @belongsTo
}

type CompetitionsType {
    id: ID!
    name: String!
    country: String!
    competitions: [Competition!]! @hasMany
}
